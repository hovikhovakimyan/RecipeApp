import 'package:flutter/material.dart';

void main() => runApp(MyApp());

class MyApp extends StatelessWidget {
  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: LandingScreen(),
    );
  }
}

class LandingScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return new Scaffold (
        appBar: AppBar(
          backgroundColor: Colors.red,
          title: Text(
            'Recipe App',
            style: TextStyle(
              fontFamily: 'Pacifico',
              fontSize: 30.0,
            ),
          ),
          actions: <Widget>[
            IconButton(
              icon: Icon(
                Icons.search,
              ),
              onPressed: (){
                showSearch(context: context, delegate: MainSearch()
                );
              },
            ),
          ],
        ),
        drawer: Drawer(
          child: ListView(
            padding: EdgeInsets.zero,
            children: <Widget>[
              DrawerHeader(
                decoration: BoxDecoration(
                  color: Colors.amber[500],
                ),
                child: Text(
                  'Hello User!',
                  style: TextStyle(
                      fontFamily: 'Caveat',
                      color: Colors.white,
                      fontSize: 40.0
                  ),
                ),
              ),
              FlatButton(
                child: ListTile(
                  leading: Icon(Icons.add_circle_outline),
                  title: Text(
                    'Profile',
                    style: TextStyle(
                      fontFamily: 'Caveat',
                      fontSize: 35.0,
                    ),
                  ),
                ),
                onPressed: (){
                  print('Profile Pressed');
                },
              ),
              SizedBox(
                height: 10.0,
                width: 30.0,
                child: Divider(
                  color: Colors.black,
                ),
              ),
              FlatButton(
                child: ListTile(
                  leading: Icon(Icons.add_circle_outline),
                  title: Text(
                    'Settings',
                    style: TextStyle(
                      fontFamily: 'Caveat',
                      fontSize: 35.0,
                    ),
                  ),
                ),
                onPressed: (){
                  print('Settings Pressed');
                },
              ),
              SizedBox(
                height: 10.0,
                width: 30.0,
                child: Divider(
                  color: Colors.black,
                ),
              ),
              FlatButton(
                child: ListTile(
                  leading: Icon(Icons.add_circle_outline),
                  title: Text(
                    'Log Out',
                    style: TextStyle(
                      fontFamily: 'Caveat',
                      fontSize: 35.0,
                    ),
                  ),
                ),
                onPressed: (){
                  print('Log Out Pressed');
                },
              ),
              SizedBox(
                height: 10.0,
                width: 30.0,
                child: Divider(
                  color: Colors.black,
                ),
              ),
            ],
          ),
        ),
        body: MainScreen(),
        backgroundColor: Colors.grey[800],
    );
  }
}

class MainScreen extends StatelessWidget {

  @override
  Widget build(BuildContext context) {
    return Column(
      children:  <Widget>[
        Row(
          children: <Widget>[
            Expanded(
              child: Image.asset('images/image1.jpg'),
            ),
          ],
        ),
        Padding(
          padding: const EdgeInsets.all(16.0),
          child: Card(
            color: Colors.amber[500],
            child: FlatButton(
              child: ListTile(
                leading: Icon(
                  Icons.add_circle_outline,
                  size: 40.0,
                  color: Colors.red,
                ),
                title: Text(
                  'Categories',
                  style: TextStyle(
                    fontFamily: 'Caveat',
                    fontSize: 40.0,
                    color: Colors.black,
                  ),
                ),
              ),
              onPressed: (){
                print('Categories pressed');
              },
            ),
          ),
        ),
        Padding(
          padding: const EdgeInsets.all(16.0),
          child: Card(
              color: Colors.amber[500],
              child: FlatButton(
                child: ListTile(
                  leading: Icon(
                    Icons.add_circle_outline,
                    size: 40.0,
                    color: Colors.red,
                  ),
                  title: Text(
                    'Ingredients',
                    style: TextStyle(
                        fontFamily: 'Caveat',
                        fontSize: 40.0,
                        color: Colors.black,
                    ),
                  ),
                ),
                onPressed: (){
                  print('Ingrediets pressed');
                },
              ),
          ),
        ),
        Padding(
          padding: const EdgeInsets.all(16.0),
          child: Card(
            color: Colors.amber[500],
            child: FlatButton(
              child: ListTile(
                leading: Icon(
                  Icons.add_circle_outline,
                  size: 40.0,
                  color: Colors.red,
                ),
                title: Text(
                  'Dishes',
                  style: TextStyle(
                    fontFamily: 'Caveat',
                    fontSize: 40.0,
                    color: Colors.black,
                  ),
                ),
              ),
              onPressed: (){
                print('Dishes pressed');
              },
            ),
          ),
        ),
        Padding(
          padding: const EdgeInsets.all(16.0),
          child: Card(
            color: Colors.amber[500],
            child: FlatButton(
              child: ListTile(
                leading: Icon(
                  Icons.add_circle_outline,
                  size: 40.0,
                  color: Colors.red,
                ),
                title: Text(
                  'Favorites',
                  style: TextStyle(
                    fontFamily: 'Caveat',
                    fontSize: 40.0,
                    color: Colors.black,
                  ),
                ),
              ),
                onPressed: (){
                  print('favorites pressed');
                },
            ),
          ),
        ),
      ],
    );
  }
}


class MainSearch extends SearchDelegate<String> {
// hardcoded tokens
  final searches = [
    "Chicken Parmesan",
    "Lasagna",
    "Garlic Butter Potatoes",
    "Pizza",
    "Spaghetti",
    "Caesar Salad",
    "Hot Wings",
    "Garlic Shrimp and White Beans",
    "South West Rice Salad",
    "Egg Caserole",
    "Bacon Avocado Fries",
    "Ravioli",
    "Carne Asada",
    "Tonkotsu Ramen",
    "Sweet and Spicy Ribs",
    "Mexican Steak Torta",
    "Grilled Cheese Fingers",
    "Homemade Salsa",
    "California Rolls",
    "Spicy Tuna Roll",
    "Choclate Chip Cookies",
    "Katsukra Tonkatsu"
  ];

  final recentSearch = [
    "Caesar Salad",
    "Hot Wings",
    "Garlic Shrimp and White Beans",
    "SouthWest Rice Salad",
  ];

  @override
  List<Widget> buildActions(BuildContext context) {
    // actions for appbar -OSCAR
    return [
      IconButton(
          icon: Icon(
            Icons.clear,
          ),
        onPressed: (){
            query = " ";
        },
      ),
    ];
  }

  @override
  Widget buildLeading(BuildContext context) {
    // leading icon on left of app bar -OSCAR
    return IconButton(
      icon: AnimatedIcon(
        icon: AnimatedIcons.menu_arrow,
        progress: transitionAnimation,
      ),
      onPressed: (){
        close(context,null);
      },
    );
  }

  @override
  Widget buildResults(BuildContext context) {
    // show some results based on selection -OSCAR
    return null;
  }

  @override
  Widget buildSuggestions(BuildContext context) {
    // show when someone searches for something -OSCAR
    final suggestionList = query.isEmpty?recentSearch:searches.where((p) => p.startsWith(query)).toList();
    return ListView.builder(
      itemBuilder: (context,index)=>ListTile(
        onTap: () {
          //show result will lead to dish page searched or clicked on based off token given by user - OSCAR
          //showResults(context); use SHOWRESULT METHOD for populating specific dish Screen - OSCAR
          print('Option Selected');
        },
        leading: Icon(
            Icons.add_circle_outline,
            size: 30.0,
        ),
        title: RichText(
          text: TextSpan(
            text: suggestionList[index].substring(0,query.length),
            style: TextStyle(
              color: Colors.black,
              fontWeight: FontWeight.bold,
            ),
            children: [
              TextSpan(
                text: suggestionList[index].substring(query.length),
                style: TextStyle(
                  color: Colors.grey,
                ),
              ),
            ]
          ),
        ),
      ),
      itemCount: suggestionList.length,
    );
  }
}

